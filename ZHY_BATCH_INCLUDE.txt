*----------------------------------------------------------------------*
*   INCLUDE ZBDCRECX1_V1                                               *
*----------------------------------------------------------------------*

SELECTION-SCREEN BEGIN OF BLOCK as01 WITH FRAME TITLE text-001.

PARAMETERS: ctu NO-DISPLAY DEFAULT 'X',
            session NO-DISPLAY,
            group NO-DISPLAY,
            user NO-DISPLAY DEFAULT sy-uname,
            keep NO-DISPLAY,
            holddate LIKE sy-datum NO-DISPLAY,
            smalllog NO-DISPLAY DEFAULT ' ',
            ctumode LIKE ctu_params-dismode NO-DISPLAY DEFAULT 'E',
            cupdate LIKE ctu_params-updmode NO-DISPLAY,
            e_group NO-DISPLAY,
            e_user NO-DISPLAY,
            e_keep NO-DISPLAY,
            e_hdate NO-DISPLAY,
            nodata NO-DISPLAY.

SELECTION-SCREEN END OF BLOCK as01.

*----------------------------------------------------------------------*
*   data definition
*----------------------------------------------------------------------*
*       Batchinputdata of single transaction
DATA:   bdcdata LIKE bdcdata    OCCURS 0 WITH HEADER LINE.
*       messages of call transaction
DATA:   messtab LIKE bdcmsgcoll OCCURS 0 WITH HEADER LINE.
*       error session opened (' ' or 'X')
DATA:   e_group_opened.
*       message texts
TABLES: t100.


*----------------------------------------------------------------------*
*   at selection screen                                                *
*----------------------------------------------------------------------*

AT SELECTION-SCREEN.
* group and user must be filled for create session
  IF session = 'X' AND
     group = space OR user = space.
    MESSAGE e613(ms).
  ENDIF.

*----------------------------------------------------------------------*
*   open dataset                                                       *
*----------------------------------------------------------------------*

FORM open_dataset USING p_dataset.
  OPEN DATASET p_dataset
               FOR INPUT IN TEXT MODE.
*               ENCODING DEFAULT.
  IF sy-subrc <> 0.
    WRITE: / text-e00, sy-subrc.
    STOP.
  ENDIF.
ENDFORM.                    "OPEN_DATASET

*----------------------------------------------------------------------*
*   close dataset                                                      *
*----------------------------------------------------------------------*

FORM close_dataset USING p_dataset.
  CLOSE DATASET p_dataset.
ENDFORM.                    "CLOSE_DATASET

*----------------------------------------------------------------------*
*   create batchinput session                                          *
*   (not for call transaction using...)                                *
*----------------------------------------------------------------------*

FORM open_group.
  IF session = 'X'.
    SKIP.
    WRITE: /(20) 'Create group'(i01), group.
    SKIP.
*   open batchinput group
    CALL FUNCTION 'BDC_OPEN_GROUP'
         EXPORTING
              client   = sy-mandt
              group    = group
              user     = user
              keep     = keep
              holddate = holddate.
    WRITE: /(30) 'BDC_OPEN_GROUP'(i02),
            (12) 'returncode:'(i05),
                 sy-subrc.
  ENDIF.
ENDFORM.                    "OPEN_GROUP

*----------------------------------------------------------------------*
*   end batchinput session                                             *
*   (call transaction using...: error session)                         *
*----------------------------------------------------------------------*

FORM close_group.
  IF session = 'X'.
*   close batchinput group
    CALL FUNCTION 'BDC_CLOSE_GROUP'.
    WRITE: /(30) 'BDC_CLOSE_GROUP'(i04),
            (12) 'returncode:'(i05),
                 sy-subrc.
  ELSE.
    IF e_group_opened = 'X'.
      CALL FUNCTION 'BDC_CLOSE_GROUP'.
      WRITE: /.
      WRITE: /(30) 'Fehlermappe wurde erzeugt'(i06).
      e_group_opened = ' '.
    ENDIF.
  ENDIF.
ENDFORM.                    "CLOSE_GROUP

*----------------------------------------------------------------------*
*        Start new transaction according to parameters                 *
*----------------------------------------------------------------------*

FORM bdc_transaction USING tcode.
  DATA: l_mstring(480).
  DATA: l_subrc LIKE sy-subrc.
* batch input session
  IF session = 'X'.
    CALL FUNCTION 'BDC_INSERT'
         EXPORTING
              tcode     = tcode
         TABLES
              dynprotab = bdcdata.
    IF smalllog <> 'X'.
      WRITE: / 'BDC_INSERT'(i03),
               tcode,
               'returncode:'(i05),
               sy-subrc,
               'RECORD:',
               sy-index.
    ENDIF.
* call transaction using
  ELSE.
    REFRESH messtab.
    CALL TRANSACTION tcode USING bdcdata
                     MODE   ctumode
                     UPDATE cupdate
                     MESSAGES INTO messtab.
    l_subrc = sy-subrc.
    IF smalllog <> 'X'.
      WRITE: / 'CALL_TRANSACTION',
               tcode,
               'returncode:'(i05),
               l_subrc,
               'RECORD:',
               sy-index.
      LOOP AT messtab.
        SELECT SINGLE * FROM t100 WHERE sprsl = messtab-msgspra
                                  AND   arbgb = messtab-msgid
                                  AND   msgnr = messtab-msgnr.
        IF sy-subrc = 0.
          l_mstring = t100-text.
          IF l_mstring CS '&1'.
            REPLACE '&1' WITH messtab-msgv1 INTO l_mstring.
            REPLACE '&2' WITH messtab-msgv2 INTO l_mstring.
            REPLACE '&3' WITH messtab-msgv3 INTO l_mstring.
            REPLACE '&4' WITH messtab-msgv4 INTO l_mstring.
          ELSE.
            REPLACE '&' WITH messtab-msgv1 INTO l_mstring.
            REPLACE '&' WITH messtab-msgv2 INTO l_mstring.
            REPLACE '&' WITH messtab-msgv3 INTO l_mstring.
            REPLACE '&' WITH messtab-msgv4 INTO l_mstring.
          ENDIF.
          CONDENSE l_mstring.
          WRITE: / messtab-msgtyp, l_mstring(250).
        ELSE.
          WRITE: / messtab.
        ENDIF.
      ENDLOOP.
      SKIP.
    ENDIF.
** Erzeugen fehlermappe ************************************************
    IF l_subrc <> 0 AND e_group <> space.
      IF e_group_opened = ' '.
        CALL FUNCTION 'BDC_OPEN_GROUP'
             EXPORTING
                  client   = sy-mandt
                  group    = e_group
                  user     = e_user
                  keep     = e_keep
                  holddate = e_hdate.
        e_group_opened = 'X'.
      ENDIF.
      CALL FUNCTION 'BDC_INSERT'
           EXPORTING
                tcode     = tcode
           TABLES
                dynprotab = bdcdata.
    ENDIF.
  ENDIF.
  REFRESH bdcdata.
ENDFORM.                    "BDC_TRANSACTION

*----------------------------------------------------------------------*
*        Start new screen                                              *
*----------------------------------------------------------------------*

FORM bdc_dynpro USING program dynpro.
  CLEAR bdcdata.
  bdcdata-program  = program.
  bdcdata-dynpro   = dynpro.
  bdcdata-dynbegin = 'X'.
  APPEND bdcdata.
ENDFORM.                    "BDC_DYNPRO

*----------------------------------------------------------------------*
*        Insert field                                                  *
*----------------------------------------------------------------------*

FORM bdc_field USING fnam fval.
*  IF fval <> nodata.
  CLEAR bdcdata.
  bdcdata-fnam = fnam.
* bdcdata-fval = fval.
  WRITE fval TO bdcdata-fval LEFT-JUSTIFIED.
  APPEND bdcdata.
*  ENDIF.
ENDFORM.                    "BDC_FIELD


*----------------------------------------------------------------------*
*                       OLD VERSION                                    *
*----------------------------------------------------------------------*

***INCLUDE BDCRECX1.
*  for programs doing a data transfer by creating a batch-input session
*  and
*  for programs doing a data transfer by CALL TRANSACTION USING

*SELECTION-SCREEN BEGIN OF LINE.
*PARAMETERS session RADIOBUTTON GROUP  ctu.  "create session
*SELECTION-SCREEN COMMENT 3(20) text-s07 FOR FIELD session.
*SELECTION-SCREEN POSITION 45.
*PARAMETERS ctu RADIOBUTTON GROUP  ctu.     "call transaction
*SELECTION-SCREEN COMMENT 48(20) text-s08 FOR FIELD ctu.
*SELECTION-SCREEN END OF LINE.
*
*SELECTION-SCREEN BEGIN OF LINE.
*
*SELECTION-SCREEN COMMENT 3(20) text-s01 FOR FIELD group.
*SELECTION-SCREEN POSITION 25.
*PARAMETERS group(12).                      "group name of session
*SELECTION-SCREEN COMMENT 48(20) text-s05 FOR FIELD ctumode.
*SELECTION-SCREEN POSITION 70.
*PARAMETERS ctumode LIKE ctu_params-dismode DEFAULT 'E'.
*"A: show all dynpros
*"E: show dynpro on error only
*"N: do not display dynpro
*SELECTION-SCREEN END OF LINE.
*
*SELECTION-SCREEN BEGIN OF LINE.
*SELECTION-SCREEN COMMENT 3(20) text-s02 FOR FIELD user.
*SELECTION-SCREEN POSITION 25.
*PARAMETERS: user(12) DEFAULT sy-uname.     "user for session in batch
*SELECTION-SCREEN COMMENT 48(20) text-s06 FOR FIELD cupdate.
*SELECTION-SCREEN POSITION 70.
*PARAMETERS cupdate LIKE ctu_params-updmode DEFAULT 'L'.
*"S: synchronously
*"A: asynchronously
*"L: local
*SELECTION-SCREEN END OF LINE.
*
*SELECTION-SCREEN BEGIN OF LINE.
*SELECTION-SCREEN COMMENT 3(20) text-s03 FOR FIELD keep.
*SELECTION-SCREEN POSITION 25.
*PARAMETERS: keep AS CHECKBOX.       "' ' = delete session if finished
*"'X' = keep   session if finished
*SELECTION-SCREEN COMMENT 48(20) text-s09 FOR FIELD e_group.
*SELECTION-SCREEN POSITION 70.
*PARAMETERS e_group(12).             "group name of error-session
*SELECTION-SCREEN END OF LINE.
*
*SELECTION-SCREEN BEGIN OF LINE.
*SELECTION-SCREEN COMMENT 3(20) text-s04 FOR FIELD holddate.
*SELECTION-SCREEN POSITION 25.
*PARAMETERS: holddate LIKE sy-datum.
*SELECTION-SCREEN COMMENT 51(17) text-s02 FOR FIELD e_user.
*SELECTION-SCREEN POSITION 70.
*PARAMETERS: e_user(12) DEFAULT sy-uname.    "user for error-session
*SELECTION-SCREEN END OF LINE.
*
*SELECTION-SCREEN BEGIN OF LINE.
*SELECTION-SCREEN COMMENT 51(17) text-s03 FOR FIELD e_keep.
*SELECTION-SCREEN POSITION 70.
*PARAMETERS: e_keep AS CHECKBOX.     "' ' = delete session if finished
*"'X' = keep   session if finished
*SELECTION-SCREEN END OF LINE.
*
*SELECTION-SCREEN BEGIN OF LINE.
*SELECTION-SCREEN COMMENT 51(17) text-s04 FOR FIELD e_hdate.
*SELECTION-SCREEN POSITION 70.
*PARAMETERS: e_hdate LIKE sy-datum.
*SELECTION-SCREEN END OF LINE.
*
*SELECTION-SCREEN SKIP.
*
*SELECTION-SCREEN BEGIN OF LINE.
*SELECTION-SCREEN COMMENT 1(33) text-s10 FOR FIELD nodata.
*PARAMETERS: nodata DEFAULT ' ' LOWER CASE.          "nodata
*SELECTION-SCREEN END OF LINE.
*
*SELECTION-SCREEN BEGIN OF LINE.
*SELECTION-SCREEN COMMENT 1(33) FOR FIELD smalllog.
*PARAMETERS: smalllog AS CHECKBOX.  "' ' = log all transactions
*                                   "'X' = no transaction logging
*SELECTION-SCREEN END OF LINE.

*----------------------------------------------------------------------*